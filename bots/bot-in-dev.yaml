# This file defines comprehensive parameters and settings for the trading bot.
# Carefully review and adjust values to match your trading strategy and risk tolerance.

# Bot identification and connection settings
name: "bot-in-dev"
env_file: ".env"
private_key: "${SOLANA_PRIVATE_KEY}"

# RPC configuration
rpc:
  rpc_endpoint: "${SOLANA_NODE_RPC_ENDPOINT}"
  wss_endpoint: "${SOLANA_NODE_WSS_ENDPOINT}"
  send_method: "helius_sender"  # Options: "solana" (standard RPC) or "helius_sender" (Helius Sender)
  # Helius Sender configuration (only used when send_method: "helius_sender")
  helius_sender:
    routing: "swqos_only"  # Options: "swqos_only" (default, requires 0.000005 SOL tip) or "dual" (requires 0.001 SOL tip)
    tip_amount_sol: 0.000005  # Tip amount in SOL (defaults: 0.000005 for swqos_only, 0.001 for dual)
    endpoint: "https://lon-sender.helius-rpc.com/fast"  # Optional override (defaults to London HTTPS endpoint)

enabled: true # You can turn off the bot w/o removing its config
separate_process: true

# Options: "pump_fun" (default), "lets_bonk"
platform: "pump_fun"

# PumpPortal configuration (optional - uses default URL if not specified)
pumpportal:
  url: "wss://pumpportal.fun/api/data" # Default PumpPortal WebSocket URL

# Testing configuration (optional)
testing:
  dry_run: true  # Set to true to simulate transactions without sending to blockchain
  dry_run_wait_time_seconds: 1.8  # Simulate RPC latency in dry-run mode


# Trading parameters
# Control trade execution: amount of SOL per trade and acceptable price deviation
trade:
  buy_amount: 0.01 # Amount of SOL to spend when buying (in SOL)
  buy_slippage: 0.5 # Maximum acceptable price deviation (0.3 = 30%)
  sell_slippage: 0.99
  max_wallet_loss_percentage: 5.0  # Stop buying if wallet loss exceeds 5%
  max_active_mints: 1 # Maximum concurrent active positions (YOLO mode only)

  # Exit strategy configuration
  exit_strategy: "trailing" # Options: "time_based", "tp_sl", "manual", "trailing"
  take_profit_percentage: 0.1 # Take profit (0.1 = 10%)
  stop_loss_percentage: 0.01 # Stop loss (0.1 = 10%)
  trailing_stop_percentage: 0.1 # Trailing stop at 20% from highest price (0.2 = 20%)
  max_hold_time: 6000 # Maximum hold time in seconds (600 = 10 minutes)
  price_check_interval: 0.5 # Check price every 2 seconds

  # Volatility-based take profit adjustments (NEW FEATURE)
  enable_volatility_adjustment: true # Enable volatility-based TP adjustments
  volatility_window_seconds: 3.0 # Time window for volatility calculation
  volatility_thresholds:
    low: 0.05    # < 5% volatility per window = low
    medium: 0.1  # 5-10% volatility per window = medium
    # > 10% volatility per window = high
  volatility_tp_adjustments:
    low: 0.0      # No adjustment for low volatility
    medium: 0.25  # Reduce TP by 25% for medium volatility
    high: 0.45    # Reduce TP by 45% for high volatility

  # Insufficient gain exit condition (NEW FEATURE)
  min_gain_percentage: 0.02 # Exit if not at least 2% gain within time window (0.02 = 2%)
  min_gain_time_window: 3 # Time window in seconds to check for minimum gain (default: 2)

  # Trade tracking configuration (NEW FEATURE)
  enable_trade_tracking: true # Enable PumpPortal trade-based pricing for real-time updates
  trade_staleness_threshold: 12.0 # Seconds before falling back to RPC pricing

  # EXTREME FAST mode configuration
  # When enabled, skips waiting for the bonding curve to stabilize and RPC price check.
  # The bot calculates token amount based on platform starting price and buy_amount for precision.
  extreme_fast_mode: true
  max_no_price_change_time: 2 # Maximum time in seconds without price change

# Priority fee configuration
# Manage transaction speed and cost on the Solana network.
# Note: dynamic mode requires an additional RPC call, which slows down the buying process.
priority_fees:
  enable_dynamic: false # Use latest transactions to estimate required fee (getRecentPrioritizationFees)
  enable_fixed: true # Use fixed amount below
  fixed_amount: 200_000 # Base fee in microlamports
  extra_percentage: 0.0 # Percentage increase on riority fee regardless of the calculation method (0.1 = 10%)
  hard_cap: 200_000 # Maximum allowable fee in microlamports to prevent excessive spending

# Compute unit limits for transaction processing
# Operation-specific defaults are used if not specified: buy=100K, sell=60K
compute_units:
  # Override default CU limits for this platform
  # buy: 100_000    # Buy operations (ATA creation + trading)
  # sell: 60_000    # Sell operations (just trading)

# Filters for token selection
filters:
  match_string: null # Only process tokens with this string in name/symbol
  bro_address: null # Only trade tokens created by this user address
  listener_type: "pumpportal" # Method for detecting new tokens: "logs", "blocks", "geyser", or "pumpportal"
  max_token_age: 0.001 # Maximum token age in seconds for processing
  marry_mode: false # Only buy tokens, skip selling
  max_buys: 1 # Maximum number of buys (null = unlimited)
  min_initial_buy_sol: 0.98 # Minimum initial SOL buy amount to consider a token (in SOL)

# Retry and timeout settings
retries:
  max_attempts: 1 # Number of attempts for transaction submission
  wait_after_creation: 15 # Seconds to wait after token creation (only if EXTREME FAST is disabled)
  wait_after_buy: 10 # Holding period after buy transaction
  wait_before_new_token: 0 # Pause between token trades

# Token and account management
cleanup:
  # Cleanup mode determines when to manage token accounts. Options:
  # "disabled": no cleanup will occur.
  # "on_fail": only clean up if a buy transaction fails.
  # "after_sell": clean up after selling.
  # "post_session": clean up all empty accounts after a trading session ends.
  force_close_with_burn: false # Force burning remaining tokens before closing account
  with_priority_fee: false # Use priority fees for cleanup transactions

# Node provider configuration (not implemented)
node:
  max_rps: 25 # Maximum requests per second
